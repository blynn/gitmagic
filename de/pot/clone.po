# Git Magic - A guide to using Git
# This file is distributed under the GNU GENERAL PUBLIC LICENSE Version 3.
# Benn Lynn <benlynn@gmail.com>, 2007.
# Armin Stebich <armin@lordofbikes.de>, 2010, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: Git Magic deutsch\n"
"Report-Msgid-Bugs-To: bennlynn@gmail.com\n"
"POT-Creation-Date: 2011-07-03 23:06+0300\n"
"PO-Revision-Date: 2011-07-04 18:21+0200\n"
"Last-Translator: Armin Stebich <armin@lordofbikes.de>\n"
"Language-Team: DE <gitmagic@lordofbikes.de>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: UTF-8\n"
"Plural-Forms: \n"

#. type: Plain text
#: ../en/clone.txt:2
msgid "== Cloning Around =="
msgstr "== Rund ums 'Clonen' =="

#. type: Plain text
#: ../en/clone.txt:4
msgid ""
"In older version control systems, checkout is the standard operation to get "
"files. You retrieve a bunch of files in a particular saved state."
msgstr ""
"In älteren Versionsverwaltungssystemen ist 'checkout' die Standardoperation "
"um Dateien zu bekommen. Du bekommst einen Haufen Dateien eines bestimmten "
"Sicherungsstands."

#. type: Plain text
#: ../en/clone.txt:6
msgid ""
"In Git and other distributed version control systems, cloning is the "
"standard operation. To get files, you create a 'clone' of the entire "
"repository. In other words, you practically mirror the central server. "
"Anything the main repository can do, you can do."
msgstr ""
"In Git und anderen verteilten Versionsverwaltungssystemen ist 'clone' die "
"Standardaktion. Um Dateien zu bekommen, erstellst du einen 'Clone' des "
"gesamten 'Repository'. Oder anders gesagt, du spiegelst den zentralen "
"Server. Alles, was man mit dem zentralen 'Repository' tun kann, kannst du "
"auch mit deinem 'Clone' tun."

#. type: Plain text
#: ../en/clone.txt:8
msgid "=== Sync Computers ==="
msgstr "=== Computer synchronisieren ==="

#. type: Plain text
#: ../en/clone.txt:10
msgid ""
"I can tolerate making tarballs or using *rsync* for backups and basic "
"syncing. But sometimes I edit on my laptop, other times on my desktop, and "
"the two may not have talked to each other in between."
msgstr ""
"Es ist akzeptabel, für Datensicherungen und einfaches Synchronisieren, mit "
"'tarball' Archiven oder *rsync* zu arbeiten. Aber manchmal arbeite ich an "
"meinem Laptop, dann an meinem Desktop-PC und die beiden haben sich "
"inzwischen nicht austauschen können."

#. type: Plain text
#: ../en/clone.txt:12
msgid ""
"Initialize a Git repository and commit your files on one machine. Then on "
"the other:"
msgstr ""
"Erstelle ein Git 'Repository' und 'commite' deine Dateien auf dem einen "
"Rechner. Dann auf dem anderen:"

#. type: Plain text
#: ../en/clone.txt:14
#, no-wrap
msgid " $ git clone other.computer:/path/to/files\n"
msgstr " $ git clone anderer.computer:/pfad/zu/dateien\n"

#. type: Plain text
#: ../en/clone.txt:16
msgid "to create a second copy of the files and Git repository. From now on,"
msgstr ""
"um eine zweite Kopie der Dateien und des Git 'Repository' zu erstellen. Von "
"jetzt an wird"

#. type: Plain text
#: ../en/clone.txt:19
#, no-wrap
msgid ""
" $ git commit -a\n"
" $ git pull other.computer:/path/to/files HEAD\n"
msgstr ""
" $ git commit -a\n"
" $ git pull anderer.computer:/pfad/zu/dateien HEAD\n"

#. type: Plain text
#: ../en/clone.txt:21
msgid ""
"will 'pull' in the state of the files on the other computer into the one "
"you're working on. If you've recently made conflicting edits in the same "
"file, Git will let you know and you should commit again after resolving them."
msgstr ""
"den Zustand der Dateien des anderen Computer auf den übertragen, an dem du "
"gerade arbeitest. Solltest du kürzlich konkurrierende Änderungen an der "
"selben Datei vorgenommen haben, lässt Git dich das wissen und musst erneut "
"'commiten' nachdem du die Konflikte aufgelöst hast."

#. type: Plain text
#: ../en/clone.txt:23
msgid "=== Classic Source Control ==="
msgstr "=== Klassische Quellcodeverwaltung ==="

#. type: Plain text
#: ../en/clone.txt:25
msgid "Initialize a Git repository for your files:"
msgstr "Erstelle ein Git 'Repository' für deine Dateien:"

#. type: Plain text
#: ../en/clone.txt:29 ../en/clone.txt:157
#, no-wrap
msgid ""
" $ git init\n"
" $ git add .\n"
" $ git commit -m \"Initial commit\"\n"
msgstr ""
" $ git init\n"
" $ git add .\n"
" $ git commit -m \"Erster Commit\"\n"

#. type: Plain text
#: ../en/clone.txt:31
msgid ""
"On the central server, initialize a 'bare repository' in some directory:"
msgstr ""
"Auf dem zentralen Server erstelle ein 'bare Repository' in irgendeinem "
"Ordner:"

#. type: Plain text
#: ../en/clone.txt:36
#, no-wrap
msgid ""
" $ mkdir proj.git\n"
" $ cd proj.git\n"
" $ git init --bare\n"
" $ touch proj.git/git-daemon-export-ok\n"
msgstr ""
" $ mkdir proj.git\n"
" $ cd proj.git\n"
" $ git init --bare\n"
" $ touch proj.git/git-daemon-export-ok\n"

#. type: Plain text
#: ../en/clone.txt:38
msgid "Start the Git daemon if necessary:"
msgstr "Wenn nötig, starte den Git-Dämon:"

#. type: Plain text
#: ../en/clone.txt:40
#, no-wrap
msgid " $ git daemon --detach  # it may already be running\n"
msgstr " $ git daemon --detach  # er könnte schon laufen\n"

#. type: Plain text
#: ../en/clone.txt:43
msgid ""
"For Git hosting services, follow the instructions to setup the initially "
"empty Git repository. Typically one fills in a form on a webpage."
msgstr ""
"Für Git Hostingdienste folge den Anweisungen zum Erstellen des zunächst "
"leeren Git 'Repository'. Normalerweise füllt man ein Formular auf einer "
"Website aus."

#. type: Plain text
#: ../en/clone.txt:45
msgid "'Push' your project to the central server with:"
msgstr "Übertrage ('push') dein Projekt auf den zentralen Server mit:"

#. type: Plain text
#: ../en/clone.txt:47
#, no-wrap
msgid " $ git push central.server/path/to/proj.git HEAD\n"
msgstr " $ git push zentraler.server/pfad/zu/proj.git HEAD\n"

#. type: Plain text
#: ../en/clone.txt:49
msgid "To check out the source, a developer types:"
msgstr "Um die Quellcodes abzurufen gibt ein Entwickler folgendes ein:"

#. type: Plain text
#: ../en/clone.txt:51
#, no-wrap
msgid " $ git clone central.server/path/to/proj.git\n"
msgstr " $ git clone zentraler.server/pfad/zu/proj.git\n"

#. type: Plain text
#: ../en/clone.txt:53
msgid "After making changes, the developer saves changes locally:"
msgstr "Nach dem Bearbeiten sichert der Entwickler die Änderungen lokal:"

#. type: Plain text
#: ../en/clone.txt:55 ../en/clone.txt:63
#, no-wrap
msgid " $ git commit -a\n"
msgstr " $ git commit -a\n"

#. type: Plain text
#: ../en/clone.txt:57
msgid "To update to the latest version:"
msgstr "Um auf die aktuelle Server-Version zu aktualisieren:"

#. type: Plain text
#: ../en/clone.txt:59 ../en/clone.txt:126
#, no-wrap
msgid " $ git pull\n"
msgstr " $ git pull\n"

#. type: Plain text
#: ../en/clone.txt:61
msgid "Any merge conflicts should be resolved then committed:"
msgstr ""
"Irgendwelche 'Merge'-Konflikte sollten dann aufgelöst und erneut 'commitet' "
"werden:"

#. type: Plain text
#: ../en/clone.txt:65
msgid "To check in local changes into the central repository:"
msgstr "Um die lokalen Änderungen in das zentrale 'Repository' zu übertragen:"

#. type: Plain text
#: ../en/clone.txt:67
#, no-wrap
msgid " $ git push\n"
msgstr " $ git push\n"

#. type: Plain text
#: ../en/clone.txt:70
msgid ""
"If the main server has new changes due to activity by other developers, the "
"push fails, and the developer should pull the latest version, resolve any "
"merge conflicts, then try again."
msgstr ""
"Wenn inzwischen neue Änderungen von anderen Entwicklern beim Hauptserver "
"eingegangen sind, schlägt dein 'push' fehl. Aktualisiere das lokale "
"'Repository' erneut mit 'pull', löse eventuell aufgetretene 'Merge'-"
"Konflikte und versuche es nochmal."

#. type: Plain text
#: ../en/clone.txt:73
msgid ""
"Developers must have SSH access for the above pull and push commands.  "
"However, anyone can see the source by typing:"
msgstr ""
"Entwickler brauchen SSH Zugriff für die vorherigen 'pull' und 'push' "
"Anweisungen. Trotzdem kann jedermann die Quelltexte einsehen, durch Eingabe "
"von:"

#. type: Plain text
#: ../en/clone.txt:75
#, no-wrap
msgid " $ git clone git://central.server/path/to/proj.git\n"
msgstr " $ git clone git://zentraler.server/pfad/zu/proj.git\n"

#. type: Plain text
#: ../en/clone.txt:79
msgid ""
"The native git protocol is like HTTP: there is no authentication, so anyone "
"can retrieve the project. Accordingly, by default, pushing is forbidden via "
"the git protocol."
msgstr ""
"Das ursprüngliche Git-Protokoll ähnelt HTTP: Es gibt keine "
"Authentifizierung, also kann jeder das Projekt abrufen. Folglich ist "
"standardmäßig das 'Pushen' per Git-Protokoll verboten."

#. type: Plain text
#: ../en/clone.txt:81
msgid "=== Secret Source ==="
msgstr "=== Geheime Quellen ==="

#. type: Plain text
#: ../en/clone.txt:87
msgid ""
"For a closed-source project, omit the touch command, and ensure you never "
"create a file named `git-daemon-export-ok`. The repository can no longer be "
"retrieved via the git protocol; only those with SSH access can see it. If "
"all your repos are closed, running the git daemon is unnecessary because all "
"communication occurs via SSH."
msgstr ""
"Für ein Closed-Source-Projekt lasse die 'touch' Anweisung weg und stelle "
"sicher, dass niemals eine Datei namens `git-daemon-export-ok` erstellt wird. "
"Das 'Repository' kann nun nicht mehr über das Git-Protokol abgerufen werden; "
"nur diejenigen mit SSH Zugriff können es einsehen. Wenn alle 'Repositories' "
"geschlossen sind, ist es unnötig den Git Dämon laufen zu lassen, da jegliche "
"Kommunikation über SSH läuft."

#. type: Plain text
#: ../en/clone.txt:89
msgid "=== Bare repositories ==="
msgstr "=== 'Nackte Repositories' ==="

#. type: Plain text
#: ../en/clone.txt:91
msgid ""
"A bare repository is so named because it has no working directory; it only "
"contains files that are normally hidden away in the `.git` subdirectory. In "
"other words, it maintains the history of a project, and never holds a "
"snapshot of any given version."
msgstr ""
"Ein nacktes ('bare') 'Repository' wird so genannt, weil es kein "
"Arbeitsverzeichnis hat. Es enthält nur Dateien, die normalerweise im '.git' "
"Unterverzeichnis versteckt sind. Mit anderen Worten, es verwaltet die "
"Geschichte eines Projekts, enthält aber niemals einen Auszug irgendeiner "
"beliebigen Version."

#. type: Plain text
#: ../en/clone.txt:98
msgid ""
"A bare repository plays a role similar to that of the main server in a "
"centralized version control system: the home of your project. Developers "
"clone your project from it, and push the latest official changes to it. "
"Typically it resides on a server that does little else but disseminate data. "
"Development occurs in the clones, so the home repository can do without a "
"working directory."
msgstr ""
"Ein 'bare Repository' übernimmt die Rolle des Hauptserver in einem "
"zentralisierten Versionsverwaltungssystem: Das Zuhause deines Projekts. "
"Entwickler 'clonen' dein Projekt davon und 'pushen' die letzten offiziellen "
"Änderungen dort hin. Meistens befindet es sich auf einem Server, der nicht "
"viel tut außer Daten zu verbreiten. Die Entwicklung findet in den 'Clonen' "
"statt, so kann das Heim-'Repository' ohne Arbeitsverzeichnis auskommen."

#. type: Plain text
#: ../en/clone.txt:100
msgid ""
"Many Git commands fail on bare repositories unless the `GIT_DIR` environment "
"variable is set to the repository path, or the `--bare` option is supplied."
msgstr ""
"Viele Git Befehle funktionieren nicht in 'bare Repositories'. Es sei denn "
"die `GIT_DIR` Umgebungsvariable wird auf das Arbeitsverzeichnis gesetzt, "
"oder die `--bare` Option wird übergeben."

#. type: Plain text
#: ../en/clone.txt:102
msgid "=== Push versus pull ==="
msgstr "=== 'Push' oder 'Pull' ==="

#. type: Plain text
#: ../en/clone.txt:110
msgid ""
"Why did we introduce the push command, rather than rely on the familiar pull "
"command? Firstly, pulling fails on bare repositories: instead you must "
"'fetch', a command we later discuss. But even if we kept a normal repository "
"on the central server, pulling into it would still be cumbersome. We would "
"have to login to the server first, and give the pull command the network "
"address of the machine we're pulling from. Firewalls may interfere, and what "
"if we have no shell access to the server in the first place?"
msgstr ""
"Warum haben wir den 'push'-Befehl eingeführt, anstatt bei dem vertrauten "
"'pull'-Befehl zu bleiben? Zuerst, 'pull' funktioniert nicht mit 'bare "
"Repositories': stattdessen benutze 'fetch', ein Befehl, den wir später "
"behandeln. Aber auch wenn wir ein normales 'Repository' auf dem zentralen "
"Server halten würden, wäre das 'pullen' eine mühselige Angelegenheit. Wir "
"müssten uns zuerst in den Server einloggen und dem 'pull'-Befehl die "
"Netzwerkadresse des Computer übergeben, von dem aus wir die Änderungen "
"'pullen', also abholen wollen. Firewalls könnten uns stören und was, wenn "
"wir gar keine Berechtigung für eine Serverkonsole haben."

#. type: Plain text
#: ../en/clone.txt:112
msgid ""
"However, apart from this case, we discourage pushing into a repository, "
"because confusion can ensue when the destination has a working directory."
msgstr ""
"Wie auch immer, abgesehen von diesem Fall, raten wir vom 'Pushen' in ein "
"'Repository' ab. Falls das Ziel nämlich ein Arbeitsverzeichnis hat, können "
"Verwirrungen entstehen."

#. type: Plain text
#: ../en/clone.txt:114
msgid ""
"In short, while learning Git, only push when the target is a bare "
"repository; otherwise pull."
msgstr ""
"Kurzum, während du lernst mit Git umzugehen, 'pushe' nur, wenn das Ziel ein "
"'bare Repository' ist; andernfalls benutze 'pull'."

#. type: Plain text
#: ../en/clone.txt:116
msgid "=== Forking a Project ==="
msgstr "=== 'Fork' eines Projekts ==="

#. type: Plain text
#: ../en/clone.txt:118
msgid ""
"Sick of the way a project is being run? Think you could do a better job? "
"Then on your server:"
msgstr ""
"Hast du es satt, wie sich ein Projekt entwickelt? Du denkst, du kannst das "
"besser? Dann mache folgendes auf deinem Server:"

#. type: Plain text
#: ../en/clone.txt:120
#, no-wrap
msgid " $ git clone git://main.server/path/to/files\n"
msgstr " $ git clone git://haupt.server/pfad/zu/dateien\n"

#. type: Plain text
#: ../en/clone.txt:122
msgid "Next, tell everyone about your fork of the project at your server."
msgstr "Dann erzähle jedem von deiner 'Fork' des Projekts auf deinem Server."

#. type: Plain text
#: ../en/clone.txt:124
msgid ""
"At any later time, you can merge in the changes from the original project "
"with:"
msgstr ""
"Zu jedem späteren Zeitpunkt kannst du die Änderungen des Originalprojekts "
"'mergen' mit: "

#. type: Plain text
#: ../en/clone.txt:128
msgid "=== Ultimate Backups ==="
msgstr "=== Ultimative Datensicherung ==="

#. type: Plain text
#: ../en/clone.txt:130
msgid ""
"Want numerous tamper-proof geographically diverse redundant archives? If "
"your project has many developers, don't do anything! Every clone of your "
"code is effectively a backup. Not just of the current state, but of your "
"project's entire history. Thanks to cryptographic hashing, if anyone's clone "
"becomes corrupted, it will be spotted as soon as they try to communicate "
"with others."
msgstr ""
"Du willst zahlreiche, vor Manipulation geschützte, redundante "
"Datensicherungen an unterschiedlichen Orten? Wenn dein Projekt viele "
"Entwickler hat, musst du nichts tun! Jeder 'Clone' deines Codes ist eine "
"vollwertige Datensicherung. Nicht nur des aktuellen Stand, sondern der "
"gesamten Geschichte. Wird irgendein 'Clone' beschädigt, wird dies dank des "
"kryptographischen 'Hashing' sofort erkannt, sobald derjenige versucht mit "
"anderen zu kommunizieren."

#. type: Plain text
#: ../en/clone.txt:132
msgid ""
"If your project is not so popular, find as many servers as you can to host "
"clones."
msgstr ""
"Wenn dein Projekt nicht so bekannt ist, finde so viele Server wie du kannst "
"um dort einen 'Clone' zu platzieren."

#. type: Plain text
#: ../en/clone.txt:134
msgid ""
"The truly paranoid should always write down the latest 20-byte SHA1 hash of "
"the HEAD somewhere safe. It has to be safe, not private. For example, "
"publishing it in a newspaper would work well, because it's hard for an "
"attacker to alter every copy of a newspaper."
msgstr ""
"Die wirklich Paranoiden sollten immer den letzten 20-Byte SHA1 Hash des "
"'HEAD' aufschreiben und an einem sicheren Ort aufbewahren. Er muss sicher "
"sein, aber nicht privat. Zum Beispiel wäre es sicher, ihn in einer Zeitung "
"zu veröffentlichen, denn es ist schwer für einen Angreifer jede "
"Zeitungskopie zu manipulieren."

#. type: Plain text
#: ../en/clone.txt:136
msgid "=== Light-Speed Multitask ==="
msgstr "=== Multitasking mit Lichtgeschwindigkeit ==="

#. type: Plain text
#: ../en/clone.txt:138
msgid ""
"Say you want to work on several features in parallel. Then commit your "
"project and run:"
msgstr ""
"Nehmen wir an du willst parallel an mehreren Funktionen arbeiten. Dann "
"'commite' dein Projekt und gib ein:"

#. type: Plain text
#: ../en/clone.txt:140 ../en/clone.txt:161
#, no-wrap
msgid " $ git clone . /some/new/directory\n"
msgstr " $ git clone . /irgendein/neuer/ordner\n"

#. type: Plain text
#: ../en/clone.txt:143
msgid ""
"Thanks to http://en.wikipedia.org/wiki/Hard_link[hardlinking], local clones "
"require less time and space than a plain backup."
msgstr ""
"http://de.wikipedia.org/wiki/Harter_Link[Harten Links] ist es zu verdanken, "
"dass ein lokaler Klon weniger Zeit und Speicherplatz benötigt als eine "
"herkömmliche Datensicherung."

#. type: Plain text
#: ../en/clone.txt:147
msgid ""
"You can now work on two independent features simultaneously. For example, "
"you can edit one clone while the other is compiling. At any time, you can "
"commit and pull changes from the other clone:"
msgstr ""
"Du kannst nun an zwei unabhängigen Funktionen gleichzeitig arbeiten. Zum "
"Beispiel kannst Du einen Klon bearbeiten, während der andere kompiliert "
"wird. Zu jeder Zeit kannst Du 'comitten' und die Änderungen des anderen Klon "
"'pullen'."

#. type: Plain text
#: ../en/clone.txt:149
#, no-wrap
msgid " $ git pull /the/other/clone HEAD\n"
msgstr " $ git pull /der/andere/clone HEAD\n"

#. type: Plain text
#: ../en/clone.txt:151
msgid "=== Guerilla Version Control ==="
msgstr "=== Versionsverwaltung im Untergrund ==="

#. type: Plain text
#: ../en/clone.txt:153
msgid ""
"Are you working on a project that uses some other version control system, "
"and you sorely miss Git? Then initialize a Git repository in your working "
"directory:"
msgstr ""
"Arbeitest du an einem Projekt, das ein anderes Versionsverwaltungssystem "
"nutzt und vermisst du Git? Dann erstelle ein Git 'Repository' in deinem "
"Arbeitsverzeichnis:"

#. type: Plain text
#: ../en/clone.txt:159
msgid "then clone it:"
msgstr "dann 'Clone' es:"

#. type: Plain text
#: ../en/clone.txt:163
msgid ""
"Now go to the new directory and work here instead, using Git to your heart's "
"content. Once in a while, you'll want to sync with everyone else, in which "
"case go to the original directory, sync using the other version control "
"system, and type:"
msgstr ""
"Nun gehe in das neue Verzeichnis und arbeite dort mit Git nach Herzenslust. "
"Irgendwann wirst du dann mit den anderen synchronisieren wollen, dann gehe "
"in das Originalverzeichnis, aktualisiere mit dem anderen "
"Versionsverwaltungssystem und gib ein:"

#. type: Plain text
#: ../en/clone.txt:166
#, no-wrap
msgid ""
" $ git add .\n"
" $ git commit -m \"Sync with everyone else\"\n"
msgstr ""
" $ git add .\n"
" $ git commit -m \"Synchronisation mit den anderen\"\n"

#. type: Plain text
#: ../en/clone.txt:168
msgid "Then go to the new directory and run:"
msgstr "Dann gehe wieder ins neue Verzeichnis und gib ein:"

#. type: Plain text
#: ../en/clone.txt:171
#, no-wrap
msgid ""
" $ git commit -a -m \"Description of my changes\"\n"
" $ git pull\n"
msgstr ""
" $ git commit -a -m \"Beschreibung der Änderungen\"\n"
" $ git pull\n"

#. type: Plain text
#: ../en/clone.txt:173
msgid ""
"The procedure for giving your changes to everyone else depends on the other "
"version control system. The new directory contains the files with your "
"changes. Run whatever commands of the other version control system are "
"needed to upload them to the central repository."
msgstr ""
"Die Vorgehensweise, wie du deine Änderungen den anderen übergibst, hängt vom "
"anderen Versionsverwaltungssystem ab. Das neue Verzeichnis enthält die "
"Dateien mit deinen Änderungen. Führe die Anweisungen des anderen "
"Versionsverwaltungssystems aus, die nötig sind um die Dateien ins zentrale "
"'Repository' zu übertragen."

#. type: Plain text
#: ../en/clone.txt:175
msgid ""
"Subversion, perhaps the best centralized version control system, is used by "
"countless projects. The *git svn* command automates the above for Subversion "
"repositories, and can also be used to http://google-opensource.blogspot."
"com/2008/05/export-git-project-to-google-code.html[export a Git project to a "
"Subversion repository]."
msgstr ""
"Subversion, vielleicht das beste zentralisierte Versionsverwaltungssystem, "
"wird von unzähligen Projekten benutzt. Der *git svn*-Befehl automatisiert "
"den zuvor genannten Ablauf für Subversion 'Repositories' und kann auch "
"benutzt werden um http://google-opensource.blogspot.com/2008/05/export-git-"
"project-to-google-code.html[ein Git Projekt in ein Subversion 'Repository' "
"zu exportieren]."

#. type: Plain text
#: ../en/clone.txt:177
msgid "=== Mercurial ==="
msgstr "=== Mercurial ==="

#. type: Plain text
#: ../en/clone.txt:179
msgid ""
"Mercurial is a similar version control system that can almost seamlessly "
"work in tandem with Git. With the `hg-git` plugin, a Mercurial user can "
"losslessly push to and pull from a Git repository."
msgstr ""
"Mercurial ist ein ähnliches Versionsverwaltungssystem, das fast nahtlos mit "
"Git zusammenarbeiten kann. Mit der `hg-git`-Erweiterung kann ein Benutzer "
"von Mercurial verlustfrei in ein Git 'Repository' 'pushen' und daraus "
"'pullen'."

#. type: Plain text
#: ../en/clone.txt:181
msgid "Obtain the `hg-git` plugin with Git:"
msgstr "Beschaffe dir die `hg-git`-Erweiterung mit Git:"

#. type: Plain text
#: ../en/clone.txt:183
#, no-wrap
msgid " $ git clone git://github.com/schacon/hg-git.git\n"
msgstr " $ git clone git://github.com/schacon/hg-git.git\n"

#. type: Plain text
#: ../en/clone.txt:185
msgid "or Mercurial:"
msgstr "oder Mercurial:"

#. type: Plain text
#: ../en/clone.txt:187
#, no-wrap
msgid " $ hg clone http://bitbucket.org/durin42/hg-git/\n"
msgstr " $ hg clone http://bitbucket.org/durin42/hg-git/\n"

#. type: Plain text
#: ../en/clone.txt:189
msgid ""
"Sadly, I am unaware of an analogous plugin for Git. For this reason, I "
"advocate Git over Mercurial for the main repository, even if you prefer "
"Mercurial. With a Mercurial project, usually a volunteer maintains a "
"parallel Git repository to accommodate Git users, whereas thanks to the `hg-"
"git` plugin, a Git project automatically accommodates Mercurial users."
msgstr ""
"Leider kenne ich keine solche Erweiterung für Git. Aus diesem Grund plädiere "
"ich für Git statt Mercurial für ein zentrales 'Repository', auch wenn man "
"Mercurial bevorzugt. Bei einem Mercurial Projekt gibt es gewöhnlich immer "
"einen Freiwilligen, der parallel dazu ein Git 'Repository' für die Git "
"Anwender unterhält, wogegen, Dank der `hg-git`-Erweiterung, ein Git Projekt "
"automatisch die Benutzer von Mercurial mit einbezieht."

#. type: Plain text
#: ../en/clone.txt:191
msgid ""
"Although the plugin can convert a Mercurial repository to a Git repository "
"by pushing to an empty repository, this job is easier with the `hg-fast-"
"export.sh` script, available from:"
msgstr ""
"Die Erweiterung kann auch ein Mercurial 'Repository' in ein Git 'Repository' "
"umwandeln, indem man in ein leeres 'Repository' 'pushed'. Einfacher geht das "
"mit dem `hg-fast-export.sh` Skript, welches es hier gibt:"

#. type: Plain text
#: ../en/clone.txt:193
#, no-wrap
msgid " $ git clone git://repo.or.cz/fast-export.git\n"
msgstr " $ git clone git://repo.or.cz/fast-export.git\n"

#. type: Plain text
#: ../en/clone.txt:195
msgid "To convert, in an empty directory:"
msgstr "Zum Konvertieren gib in einem leeren Verzeichnis ein:"

#. type: Plain text
#: ../en/clone.txt:198
#, no-wrap
msgid ""
" $ git init\n"
" $ hg-fast-export.sh -r /hg/repo\n"
msgstr ""
" $ git init\n"
" $ hg-fast-export.sh -r /hg/repo\n"

#. type: Plain text
#: ../en/clone.txt:200
msgid "after adding the script to your `$PATH`."
msgstr "nachdem du das Skript zu deinem `$PATH` hinzugefügt hast."

#. type: Plain text
#: ../en/clone.txt:202
msgid "=== Bazaar ==="
msgstr "=== Bazaar ==="

#. type: Plain text
#: ../en/clone.txt:205
msgid ""
"We briefly mention Bazaar because it is the most popular free distributed "
"version control system after Git and Mercurial."
msgstr ""
"Wir erwähnen auch kurz Bazaar, weil es nach Git und Mercurial das "
"bekannteste freie verteilte Versionsverwaltungssystem ist."

#. type: Plain text
#: ../en/clone.txt:207
msgid ""
"Bazaar has the advantage of hindsight, as it is relatively young; its "
"designers could learn from mistakes of the past, and sidestep minor "
"historical warts. Additionally, its developers are mindful of portability "
"and interoperation with other version control systems."
msgstr ""
"Bazaar hat den Vorteil des Rückblicks, da es relativ jung ist; seine "
"Entwickler konnten aus Fehlern der Vergangenheit lernen und kleine "
"historische Unwegbarkeiten umgehen. Außerdem waren sich die Entwickler der "
"Popularität und Interoperabilität mit anderen Versionsverwaltungssystemen "
"bewusst."

#. type: Plain text
#: ../en/clone.txt:209
msgid ""
"A `bzr-git` plugin lets Bazaar users work with Git repositories to some "
"extent. The `tailor` program converts Bazaar repositories to Git "
"repositories, and can do so incrementally, while `bzr-fast-export` is well-"
"suited for one-shot conversions."
msgstr ""
"Eine `bzr-git`-Erweiterung lässt Anwender von Bazaar einigermaßen mit Git "
"'Repositories' arbeiten. Das `tailor` Programm konvertiert Bazaar "
"'Repositories' zu Git 'Repositories' und kann das forlaufend tun, während "
"`bzr-fast-export` für einmalige Konvertierungen besser geeignet ist."

#. type: Plain text
#: ../en/clone.txt:211
msgid "=== Why I use Git ==="
msgstr "=== Warum ich Git benutze ==="

#. type: Plain text
#: ../en/clone.txt:213
msgid ""
"I originally chose Git because I heard it could manage the unimaginably "
"unmanageable Linux kernel source. I've never felt a need to switch. Git has "
"served admirably, and I've yet to be bitten by its flaws. As I primarily use "
"Linux, issues on other platforms are of no concern."
msgstr ""
"Ich habe ursprünglich Git gewählt, weil ich gehört habe, dass es die "
"unvorstellbar unüberschaubaren Linux Kernel Quellcodes verwalten kann. Ich "
"hatte noch keinen Grund zu wechseln. Git hat mir bewundernswert gedient und "
"hat mich bis jetzt noch nie im Stich gelassen. Da ich in erster Linie unter "
"Linux arbeite, sind Probleme anderer Plattformen bedeutungslos."

#. type: Plain text
#: ../en/clone.txt:215
msgid ""
"Also, I prefer C programs and bash scripts to executables such as Python "
"scripts: there are fewer dependencies, and I'm addicted to fast running "
"times."
msgstr ""
"Ich bevorzuge auch C-Programme und 'bash'-Skripte gegenüber Anwendungen wie "
"zum Beispiel Python Skripts: Es gibt weniger Abhängigkeiten und ich bin "
"süchtig nach schellen Ausführungszeiten."

#. type: Plain text
#: ../en/clone.txt:217
msgid ""
"I did think about how Git could be improved, going so far as to write my own "
"Git-like tool, but only as an academic exercise. Had I completed my project, "
"I would have stayed with Git anyway, as the gains are too slight to justify "
"using an oddball system."
msgstr ""
"Ich dachte darüber nach, wie Git verbessert werden könnte, ging sogar so "
"weit, dass ich meine eigene Git-Ähnliche Anwendung schrieb, allerdings nur "
"als akademische Übungen. Hätte ich mein Projekt fertig gestellt, wäre ich "
"trotzdem bei Git geblieben, denn die Verbesserungen wären zu gering gewesen "
"um den Einsatz eines Eigenbrödler-Systems zu rechtfertigen."

#. type: Plain text
#: ../en/clone.txt:218
msgid ""
"Naturally, your needs and wants likely differ, and you may be better off "
"with another system. Nonetheless, you can't go far wrong with Git."
msgstr ""
"Natürlich können deine Bedürfnisse und Wünsche ganz anders sein und "
"vielleicht bist du mit einem anderen System besser dran. Wie auch immer, mit "
"Git kannst du nicht viel falsch machen."

#~ msgid ""
#~ "Git exploits hard links and file sharing as much as safely possible to "
#~ "create this clone, so it will be ready in a flash, and you can now work "
#~ "on two independent features simultaneously. For example, you can edit one "
#~ "clone while the other is compiling."
#~ msgstr ""
#~ "Wann immer es sicher ist nutzt Git Verknüpfungen und Dateifreigaben um "
#~ "diesen 'Clone' zu erzeugen, deshalb wird es blitzartig fertig sein und du "
#~ "kannst nun an zwei unabhängigen Funktionen arbeiten. Zum Beispiel kannst "
#~ "du im einen 'Clone' editieren, während der andere übersetzt wird."

#~ msgid "At any time, you can commit and pull changes from the other clone."
#~ msgstr ""
#~ "Zu jeder Zeit kannst du 'commiten' und die Änderungen vom anderen 'Clone' "
#~ "mit 'pull' übernehmen."
